visit_brothel_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_brothel.dds"
	ai_check_interval = 60

	cooldown = { days = standard_feast_cooldown_time  }

	desc = visit_brothel_decision_opening_desc
	selection_tooltip = visit_brothel_decision_tooltip

	is_shown = {
		any_realm_province = {
			OR = {
				has_building_or_higher = whorehouse_01
				has_building_or_higher = bordello_01
			}
		}
	}

	is_valid_showing_failures_only = {
		is_available = yes
		short_term_gold >= minor_gold_value
	}

	effect = {
		show_as_tooltip = {
			if = {
				limit = {
					faith = { has_doctrine = tenet_free_love }
				}
				add_piety = minor_piety_gain
			}
		}

		trigger_event = {
			id = brothel_visit.1
		}
	}
	
	ai_potential = {

	}

	ai_will_do = {
		base = 20
	}
}

visit_kahlaston_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_visit_kahlaston.dds"
	ai_check_interval = 120

	desc = visit_kahlaston_decision_desc
	selection_tooltip = visit_kahlaston_decision_tooltip

	is_shown = {
		is_landed = yes
		highest_held_title_tier > tier_barony
		OR = { ## Only ones who actually care about the Kahlastons
			faith = {
				AND = {
					has_doctrine = tenet_kahlaston
					any_holy_site = {
						exists = this
					}
				}
			}
			faith = faith:al_haqia
			faith = faith:aljisa 
			faith = faith:qital 
			faith = faith:halaghaz 
			faith = faith:alqitite
		}
	}

	cost = {
		gold = minor_gold_value
	}

	cooldown = { months = 60 }	

	is_valid_showing_failures_only = {
		is_available_adult = yes
		is_at_war = no
	}

	effect = {
		trigger_event = kahlaston_visit_event.1
	}
}

take_vow_of_poverty_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

	desc = take_vow_of_poverty_decision_desc
	selection_tooltip = take_vow_of_poverty_decision_tooltip

	is_shown = {
		is_ruler = yes
		faith = {
			has_doctrine_parameter = vows_of_poverty_active
		}
		NOT = { has_character_modifier = vow_of_poverty_modifier }
	}

	effect = {
		add_character_modifier = {
			modifier = vow_of_poverty_modifier
		}

		stress_impact = {
			greedy = major_stress_impact_gain
			cynical = medium_stress_impact_gain
			ambitious = minor_stress_impact_gain
		}
	}
	
	ai_check_interval = 120

	ai_potential = {
		# AI considers taking if their income exceeds their expenses * 1.4 (decision will reduce it by 20%).
		monthly_character_income > monthly_character_expenses_plus_fourty_percent
	}

	ai_will_do = {
		base = 0

		# If ai_zeal is 20 points higher than ai_greed, becomes 100% chance.
		ai_value_modifier = {
			ai_zeal = 5
			ai_greed = -5
		}
	}
}